(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{428:function(s,a,t){"use strict";t.r(a);var e=t(14),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包"}},[s._v("#")]),s._v(" 打包")]),s._v(" "),a("p",[s._v("打包整个应用应该遵循"),a("code",[s._v("NPM")]),s._v("风格：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" pack\n")])])]),a("p",[a("a",{attrs:{href:"https://docs.npmjs.com/cli/pack",target:"_blank",rel:"noopener noreferrer"}},[s._v("npm pack"),a("OutboundLink")],1),s._v(" 会在应用当中生成一个"),a("code",[s._v("TGZ")]),s._v("文件，您可以把这个应用移动到其他的目录下。然而应用也可以发布到NPM注册中心。")]),s._v(" "),a("p",[s._v("请注意(这很重要)：为了能与"),a("code",[s._v("published/packed")]),s._v("正常的运行，我们需要在目标环境拥有打包"),a("a",{attrs:{href:"https://www.npmjs.com/package/es4x-pm",target:"_blank",rel:"noopener noreferrer"}},[s._v("es4x-pm"),a("OutboundLink")],1),s._v("的权限，因为我们有必要安装"),a("code",[s._v("java")]),s._v("的部分。")]),s._v(" "),a("h2",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),a("p",[s._v("您也可以为自己创建Docker镜像：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("es4x dockerfile\n")])])]),a("p",[s._v("这样可以生成一个简化的"),a("code",[s._v("dockerfile")]),s._v("，您可以根据自己的需要自定义这个"),a("code",[s._v("dockerfile")]),s._v("，默认状况下这个文件分3步构建：")]),s._v(" "),a("ol",[a("li",[s._v("第一步，"),a("code",[s._v("node")]),s._v("用来安装所有的"),a("code",[s._v("NPM")]),s._v("依赖")]),s._v(" "),a("li",[s._v("第二步，"),a("code",[s._v("java")]),s._v("用来安装"),a("code",[s._v("Maven")]),s._v("依赖")]),s._v(" "),a("li",[s._v("最后一步，GraalVM镜像用来启动应用")])]),s._v(" "),a("p",[s._v("默认情况下，我们使用"),a("a",{attrs:{href:"https://hub.docker.com/r/oracle/graalvm-ce",target:"_blank",rel:"noopener noreferrer"}},[s._v("oracle/graalvm-ce"),a("OutboundLink")],1),s._v("docker镜像，但是您也可以用其他含有openJdk并支持JVMCI的镜像(请使用java11及以上的版本)。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" --build-arg "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("BASEIMAGE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("openjdk:11\n")])])]),a("h2",{attrs:{id:"jlink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jlink"}},[s._v("#")]),s._v(" JLink")]),s._v(" "),a("p",[s._v("Java 11 支持 "),a("a",{attrs:{href:"https://docs.oracle.com/en/java/javase/11/tools/jlink.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("jlink"),a("OutboundLink")],1),s._v("。您可以使用jlink工具来把所有模块及其依赖整理优化到自定义的运行镜像。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("es4x jlink\n")])])]),a("p",[s._v("这会生成一个最优的运行环境，这意味着可以不用依赖于完整的JDK环境。")]),s._v(" "),a("p",[s._v("作为对比，一个hello world应用在运行时占用"),a("strong",[s._v("80Mb")]),s._v("的空间，但是完整的JDK环境却要求"),a("strong",[s._v("200Mb")]),s._v("。")]),s._v(" "),a("p",[s._v("这个特性可以和"),a("code",[s._v("Dockerfile")]),s._v("配合使用。用"),a("code",[s._v("OpenJDK")]),s._v("为环境的镜像以取代graal为环境的镜像。然后第二步，运行jlink：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二步（构建JVM相关代码）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" openjdk:11 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" JVM")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" ES4X_VERSION="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${project.version}")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制上一步的构建步骤")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("NPM")])]),s._v(" /usr/src/app /usr/src/app")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定工作空间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /usr/src/app")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载ES4X运行环境工具")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" curl -sL https://github.com/reactiverse/es4x/releases/download/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${ES4X_VERSION}")]),s._v("/es4x-pm-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${ES4X_VERSION}")]),s._v("-bin.tar.gz | "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    tar zx --strip-components=1 -C /usr/local")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装java依赖")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# force es4x maven resolution only to consider production dependencies")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制es4x的maven解析仅仅关心生产环境的依赖")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" es4x install --only=prod")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建最简化的运行环境")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" es4x jlink -t /usr/local")]),s._v("\n")])])]),a("p",[s._v("这会在jre中生成一个最简的运行环境，这个运行环境在最后一步当中当作最简的基础镜像来使用。")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" debian:slim")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 整理前一步骤生成的jar包")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("JVM")])]),s._v(" /usr/local /usr/local")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("JVM")])]),s._v(" /usr/src/app /usr/src/app")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定工作空间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /usr/src/app")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打包应用源")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为docker容器自定义java options参数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" JAVA_OPTS="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseContainerSupport"')])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义入口文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" [ "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./node_modules/.bin/es4x-launcher"')]),s._v(" ]")]),s._v("\n")])])]),a("p",[s._v("这一步会生成一个小规模的最终镜像(比上一步生成的镜像稍大)，因为您也同时将最简运行环境打包进入了最终的docker镜像。")])])}),[],!1,null,null,null);a.default=r.exports}}]);