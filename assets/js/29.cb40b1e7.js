(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{314:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"logging"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logging"}},[t._v("#")]),t._v(" Logging")]),t._v(" "),e("p",[t._v("Logging is a very common feature for all applications. ES4X does not implement a logger, instead it just uses the logger\nfrom the JDK, also known as "),e("em",[t._v("java util logging")]),t._v(" or "),e("em",[t._v("JUL")]),t._v(". Even the "),e("code",[t._v("console")]),t._v(" object is linked to it, so you can disable\nconsole from logging at a specific level at runtime just by using configuration.")]),t._v(" "),e("p",[t._v("In order to customize the logging, create a file "),e("code",[t._v("logging.properties")]),t._v(" with the configuration as you like. The default\nconfiguration is:")]),t._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("handlers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("java.util.logging.ConsoleHandler")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("java.util.logging.ConsoleHandler.formatter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("io.reactiverse.es4x.jul.ANSIFormatter")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("java.util.logging.ConsoleHandler.level")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("FINEST")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v(".level")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("INFO")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("io.reactiverse.level")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("INFO")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("io.vertx.level")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("INFO")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("com.hazelcast.level")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("INFO")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("io.netty.util.internal.PlatformDependent.level")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("SEVERE")]),t._v("\n")])])]),e("p",[t._v("You can see that there is a custom formatter, this is to offer you a "),e("code",[t._v("ANSI")]),t._v(" color logger. If the formatter is disabled all\nlogs will be in plain text without "),e("code",[t._v("ANSI")]),t._v(" codes.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("To only log warning and errors at runtime, including from the "),e("code",[t._v("console")]),t._v(" object, just level up the level on the console\nhandler.")]),t._v(" "),e("p",[t._v("You can even ship the logs to other locations by adding more handlers.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);